input->{1 , 4 , 5 , 1 }
o/p-> 1;
input ->{1 2 2 1}
o/p -> 0;
input->{1 2 ,3 4}
o/p-> 3
simply for max its n - 1 nd min we hve ti find it 

recursive approach

import java.util.*;

public class Main {

  // ~~~~~~~~~~User Section~~~~~~~~~~~
  public static int ans(int[]a , int si , int ei) {
    // write your code here
    
    int count = 0;
    if(a[si] == a[ei] && si < ei){
        return count = ans(a , si + 1  , ei - 1);
    }else if(a[si] < a[ei] && si < ei){
        return count = 1 + ans(a , si + 1 , ei);
    }else{
        if(si < ei)
           return count = 1 + ans(a , si , ei - 1);
    }
    return count;
  }

  // ~~~~~~~~Input Management~~~~~~~~~
  public static void main(String[] args) {
    Scanner scn = new Scanner(System.in);
    int n = scn.nextInt();
    int[]a=new int[n];
    for(int i = 0 ; i < n;i++){
        a[i] = scn.nextInt();
    }
    
    System.out.println(ans(a,0,n -1));
  }
}
